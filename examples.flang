###
Graphical programs written in flang - language
language: flang
author: mystikkogames ( mystikkogames@protonmail.com )
license: GPLv2
###

( include "utils.flang" )

# http://rosettacode.org/wiki/Bitmap/Write_a_PPM_file
# image: https://imgur.com/lWyqS55
( function :rosetta_example_renderer ( ) :
    ( $width 800 = )
    ( $height 600 = )
    ( :image_init )
    ( $width :image_set_width )
    ( $height :image_set_height )
    ( "rosetta_example_renderer.ppm" :image_set_name )
    ( :image_reset_data )
    ( $y 0 = )
    ( loop ( $y $height < ) :
    	( $x 0 = ) 
		( loop ( $x $width < ) :  
		    ( $x :image_set_x ) 
		    ( $y :image_set_y ) 
		    ( $x 256 % :image_set_r )
		    ( $y 256 % :image_set_g )
		    ( $x $y * 256 % :image_set_b )
		    ( $x ++ )		    
		)
		( $y ++ )
	)
	( :file_write_image )
) 

# image: https://imgur.com/6o3GtsS
( function :random_sin_example_renderer ( ) :
    ( $width 800 = )
    ( $height 600 = )
    ( :image_init )
    ( $width :image_set_width )
    ( $height :image_set_height )
    ( "random_sin_example_renderer.ppm" :image_set_name )
    ( :image_reset_data )
    ( $cnt 10 20 :random = )
	( loop ( $cnt 0 > ) :
		( $color_r 0 255 :random = )
		( $color_g 0 255 :random = )
		( $color_b 0 255 :random = )
    	( $wave 10 255 :random = )
    	( $y_pos 10 $height :random = )
    	( $amplitude 10 $height 2 / :random = )
    	( $i 0 = )
		( loop ( $i $width < ) :
			( $x $i = )
			( $y $x $wave / :sin $amplitude * $y_pos + = )	   
		    ( $x :image_set_x ) 
		    ( $y :image_set_y ) 
			( $color_r :image_set_r )
			( $color_g :image_set_g )
			( $color_b :image_set_b )
			( $i 0.25 += )		    
		)
		( $cnt -- )
	)
	( :file_write_image )
) 

# https://imgur.com/ngPjn7C
( function :random_lines_renderer ( ) :
    ( $o ["x": "0", "y": "0", "r": "125", "g": "125", "b": "125", "width": 800, "height": 600] = )
    ( $width $o ".width" -> = )
    ( $height $o ".height" -> = )    
    ( :image_init )
    ( $width :image_set_width )
    ( $height :image_set_height )
    ( "random_lines_renderer.ppm" :image_set_name )
    ( :image_reset_data )
    ( $cnt 10 110 :random = )
    ( $i 0 = )
    ( loop ( $i $cnt < ) :
        ( $o ".x" 0 $width :random <- ) 
        ( $o ".y" 0 $height :random <- )
        ( $o ".x2" 0 $width :random <- ) 
        ( $o ".y2" 0 $height :random <- )
        ( $o :gfx_random_color )
        ( $o :gfx_render_line )
        ( $i ++ )
    )
	( :file_write_image )
)

# image: https://imgur.com/t62BYDB
( function :random_filled_circles_renderer ( ) :
    ( $o ["x": "0", "y": "0", "radius": "50", "r": "125", "g": "125", "b": "125", "width": 800, "height": 600] = )
    ( $width $o ".width" -> = )
    ( $height $o ".height" -> = )    
    ( :image_init )
    ( $width :image_set_width )
    ( $height :image_set_height )
    ( "random_filled_circles_renderer.ppm" :image_set_name )
    ( :image_reset_data )
    ( $cnt 10 110 :random = )
    ( $i 0 = )
    ( loop ( $i $cnt < ) :
        ( $o ".x" 0 $width :random <- ) 
        ( $o ".y" 0 $height :random <- )
        ( $o ".radius" 10 100 :random <- )
        ( $o :gfx_random_color )
        ( $o :gfx_render_filled_circle )
        ( $i ++ )
    )
	( :file_write_image )
)

# image: https://imgur.com/t62BYDB
( function :random_circles_renderer ( ) :
    ( $o ["x": "0", "y": "0", "radius": "50", "r": "125", "g": "125", "b": "125", "width": 800, "height": 600] = )
    ( $width $o ".width" -> = )
    ( $height $o ".height" -> = )    
    ( :image_init )
    ( $width :image_set_width )
    ( $height :image_set_height )
    ( "random_circles_renderer.ppm" :image_set_name )
    ( :image_reset_data )
    ( $cnt 10 110 :random = )
    ( $i 0 = )
    ( loop ( $i $cnt < ) :
        ( $o ".x" 0 $width :random <- ) 
        ( $o ".y" 0 $height :random <- )
        ( $o ".radius" 10 100 :random <- )
        ( $o :gfx_random_color )
        ( $o :gfx_render_circle )
        ( $i ++ )
    )
	( :file_write_image )
)

( function :random_filled_rectangles_renderer ( ) :    
    ( $o ["x": "0", "y": "0", "radius": "50", "r": "125", "g": "125", "b": "125", "width": 800, "height": 600] = )
    ( $width $o ".width" -> = )
    ( $height $o ".height" -> = )    
    ( :image_init )
    ( $width :image_set_width )
    ( $height :image_set_height )
    ( "random_filled_rectangles_renderer.ppm" :image_set_name )
    ( :image_reset_data )
    ( $cnt 10 30 :random = )
    ( $i 0 = )
    ( loop ( $i $cnt < ) :
        ( $o ".x" 0 $width :random <- ) 
        ( $o ".y" 0 $height :random <- )
        ( $o ".w" 100 $width :random <- ) 
        ( $o ".h" 100 $height :random <- )
        ( $o :gfx_random_color )
        ( $o :gfx_render_filled_rectangle )
        ( $i ++ )
    )
	( :file_write_image )
)

( function :mandelbrot_renderer ( ) :	
    ( $width 800 = )
    ( $height 600 = )
	( $move_x -200 200 :random = )
	( $move_y -200 200 :random = )
	( $r 0 50 :random = )
	( $g 0 50 :random = )
	( $b 0 50 :random = )
	( $fr 1 1.5 :random = )
	( $fg 1 1.5 :random = )
	( $fb 1 1.5 :random = )	
	( $zoom 0.01 5 :random = )
	( $loops 100 = )
	
    ( :image_init )
    ( $width :image_set_width )
    ( $height :image_set_height )
    ( 1 1000 :random "mandelbrot_renderer%i.ppm" :sprintf :image_set_name )
    ( :image_reset_data )    
    ( $i 0 = )
    
    ( $escaper ( lambda ( $o ) : 
        ( $i 0 = $n 0 = $x 0 = $y 0 = ) 
        ( $im $o ".im" -> = ) 
        ( $re $o ".re" -> = ) 
        ( $loops $o ".loops" -> = ) 
        ( loop ( $x 2 :pow $y 2 :pow + 4 < $i $loops < and ) : 
            ( $t $x 2 :pow $y 2 :pow - $re + = ) 
            ( $y $x $y 2 * * $im + = ) 
            ( $x $t = ) 
            ( $i ++ ) 
        ) 
        ( $i ) 
    ) = )
    
    ( $n $width $height * = ) 
    ( $o [] = )
    ( $o ".loops" $loops <- )
    ( loop ( $i $n < ) : 
        ( $x $i $width % = )
        ( $y $i $width / :floor = )
        ( $re $x $move_x + $width 2.0 / - $zoom * $width / = )
        ( $im $y $move_y + $height 2.0 / - $zoom * $width / = )
        ( $o ".im" $im <- )
        ( $o ".re" $re <- )
        ( $c $o :$escaper = )     
	    ( $x :image_set_x ) 
	    ( $y :image_set_y ) 
        ( if ( $c $loops < ) :          
			( $r $c $fr * + :image_set_r )
			( $g $c $fg * + :image_set_g )
			( $b $c $fb * + :image_set_b )
        )
        ( $i ++ )
    )
	( :file_write_image )
)


( function :julia_set_renderer ( ) :
    ( $width 1000 = )
    ( $height 1000 = )
    ( $move_x -0.1325 0.1325 :random = )
    ( $move_y -0.1325 0.1325 :random = )
    ( $color_r_base 0 25 :random = )
    ( $color_g_base 0 25 :random = )
    ( $color_b_base 0 25 :random = )
    ( $loops 300 = )     
  	( $zoom 0.45 0.9 :random = )      
    ( $cre -0.959 -0.45 :random = )
    ( $cim 0.2 0.5 :random = )
    
    ( :image_init )
    ( $width :image_set_width )
    ( $height :image_set_height )
    ( 1 10000 :random "julia_set_renderer%i.ppm" :sprintf :image_set_name )
    ( :image_reset_data )    
    
    ( $escaper ( lambda ( $o ) : 
    	( $re $o ".re" -> = )
    	( $im $o ".im" -> = )
    	( $cre $o ".cre" -> = )
    	( $cim $o ".cim" -> = )
    	( $loops $o ".loops" -> = )
        ( $i 0 = )
        ( $new_re $re = )
        ( $new_im $im = ) 
        ( loop ( $i $loops < $new_re $new_re * $new_im $new_im * + 4 < and ) : 
            ( $old_re $new_re = )
            ( $old_im $new_im = ) 
            ( $new_re $old_re $old_re * $old_im $old_im * - $cre + = ) 
            ( $new_im $old_re $old_im 2 * * $cim + = ) 
            ( $i ++ ) 
        ) 
        ( $i ) 
    ) = )
    
    ( $n $width $height * = )
   	( $o [] = )
    ( $o ".cre" $cre <- )
    ( $o ".cim" $cim <- )
    ( $o ".loops" $loops <- )
    ( $y 0 = )
    ( loop ( $y $height < ) : 
    	( $x 0 = )
		( loop ( $x $width < ) : 
		    ( $re $x $width 0.5 * - 0.5 $zoom $width * * / $move_x + = )
		    ( $im $y $height 0.5 * - 0.5 $zoom $height * * / $move_y + = )
		    ( $o ".re" $re <- )
		    ( $o ".im" $im <- )
		    ( $cnt $o :$escaper = )     			
			( $x :image_set_x ) 
			( $y :image_set_y ) 	
			( if ( $cnt 100 > ) : ( $cnt 0.85 *= ) )		        
			( $cnt 0.955 * $cnt 0.2087 * 2 :pow + $color_r_base + 225 :min :image_set_r )  
			( $cnt 0.867 * $cnt 0.2076 * 2 :pow + $color_g_base + 230 :min :image_set_g )
			( $cnt 0.883 * $cnt 0.2295 * 2 :pow + $color_b_base + 250 :min :image_set_b ) 
		    ( $x ++ )
		) 
		( $y ++ )
	)
	( :file_write_image )
) 

( function :render_mandelbrots ( ) :
	( $i 0 = )
	( loop ( $i 10 < ) : 
    	( $t :clock_diff = )
		( :mandelbrot_renderer )
		( $t2 :clock_diff = )    
		( $t2 $t - $i "%i. mandelbrot # %.3fs\n" :printf )  
		( $i ++ )
	)	
)

( function :render_julia_sets ( ) :
	( $i 0 = )
	( loop ( $i 10 < ) : 
    	( $t :clock_diff = )
		( :julia_set_renderer )
		( $t2 :clock_diff = )    
		( $t2 $t - $i "%i. julia set # %.3fs\n" :printf )  
		( $i ++ )
	)	
)
 
( function :main ( ) :  
    ( :clock_start )
    ( $t :clock_diff = )
    
    ###
	( :rosetta_example_renderer )   
    ( :random_circles_renderer ) 	
 	( :random_lines_renderer ) 	
    ( :random_filled_rectangles_renderer )
    ( :random_filled_circles_renderer )   
	( :random_sin_example_renderer )     
	( :render_mandelbrots ) 
	###
	( :render_julia_sets )
	
    ( $t2 :clock_diff = )
	( $t2 $t - "total rendering time # %.3fs\n" :printf )  
)
